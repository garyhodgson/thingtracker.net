{
    "project": {},
    "files": {
        "make_torrent.js": {
            "name": "make_torrent.js",
            "modules": {
                "make_torrent": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "make_torrent": {
            "name": "make_torrent",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "make_torrent.js",
            "line": 1,
            "description": "Make a torrent file that contains a thing.\n\nThis program follows up on the \n<a href=\"http://my.brainshark.com/Distributed-Thing-Tracker-767853647\">Distributed Thing Tracker</a>\nproposal to use BitTorrent as a means to distribute things.\n\nThe process is quick and dirty, i.e. easy for me to code so you need to do all the work.\nIn brief:\n<ul>\n<li>Create a thing.</li>\n<li>Create a torrent file with the thing files.</li>\n<li>Merge them with this program.</li>\n<li>Seed your torrent.</li>\n<li>Publish the magnet link generated by this program.</li>\n</ul>\n\nMore slowly now.\n\nYou need to create a design and put its metadata in a JSON format.\nMaking the actual design is beyond the scope of these instructions,\nbut it would be something like creating an <a href=\"http://www.openscad.org/\">OpenSCAD</a>\nor <a href=\"http://openjscad.org/\">OpenJSCAD</a> file.\nOnce you have your design, you can create a JSON file with the\nmetadata that describes it. You can start from this template, but the\ndefinitive source is the <a href=\"http://thingtracker.net/specification.html\">Thing Tracker Network</a>.\n\n     {\n       \"title\": \"Mechanical Movement #27\",\n       \"URL\": \"http://garyhodgson.github.com/githubiverse-tst\",\n       \"author\": \"Gary Hodgson\",\n       \"license\": \"GPL3\",\n       \"tags\": [\"mechanical movement\", \"fun\"],\n       \"thumbnailURL\": \"https://github.com/garyhodgson/githubiverse-tst/raw/master/img/test-jig.jpg\",\n       \"description\": \"An implementation of movement #27 from &quot;501 Mechanical Movements&quot; by Henry T. Brown.\\\\n\\\\nThis is still a work in progress.\"\n     }\n\nOnce you have a JSON file that has contents like the above and your design files\nyou have a \"thing\" and can proceed to make a \"distributed thing\" out of it.\n\nYou will need a way to create a .torrent file, which means a capable torrent client.\nI suggest <a href=\"http://www.utorrent.com/\">µTorrent</a>.\nDo whatever is necessary with that tool to generate a .torrent file.\nI'll describe what I did.\nPush the nice friendly <a href=\"http://www.utorrent.com/\">Get µTorrent</a> button.\nClick the <a href=\"http://www.utorrent.com/downloads/complete/os/win\">Free Download</a>\nfine print link above the comparison chart.\nSave the uTorrent.exe file.\nRun the uTorrent.exe file by double clicking on it. This installs the µTorrent client\n(for me it was Version 3.3 Build 29342). I installed it in directory\nC:\\Program Files (x86)\\uTorrent and unchecked every option it offered except\n\"Add an exception for µTorrent in Windows Firewall\" but you can choose other options.\nThe program starts up, or start it up by clicking on the <em>installed</em> \nuTorrent.exe (this one: C:\\Program Files (x86)\\uTorrent\\uTorrent.exe).\nCreate a new torrent. From the File menu, choose Create New Torrent..., or hot-key CTRL-N.\nClick the Add File button and select the design file (you could also add a directory of\nfiles if there were more than one).\nRemove all the tracker info from the Trackers text box.\nAdd a comment in the Comment field if you want.\nClick the Create and save as... button and save the new .torrent file.\nClick Yes to the dialog box that is displayed with the text:\n\"Please enter a valid tracker URL. Do you want to continue without having any trackers?\"\n\nYou can check the contents of the .torrent file by uploading it to\n<a href=\"http://www.tools4noobs.com/online_tools/torrent_decode/\">Tools4noobs Torrent decode</a>.\n\nThe two pieces - the .json and the .torrent can now be merged by running this program.\nThis program requires <a href=\"http://nodejs.org/\">node.js</a>, so you need to install it first.\nAfter that, you should have commands \"node\" and \"npm\" (the node package manager) available.\n\nThe program relies on two packages, namely\n<a href=\"https://github.com/themasch/node-bencode\">bencode</a>\nand\n<a href=\"https://github.com/pvorb/node-sha1\">sha1</a>.\nYou can install these locally (i.e. in the directory you're working in -\nthe same one this file is in) with these commands:\n\n      npm install bencode\n      npm install sha1\n\nNow you can make a \"thing\". The command line is:\n\n      node make_torrent.js thing.json thing.torrent output.torrent\n\nwhere:\n<ul>\n<li>thing.json is the metadata file you created from the template</li>\n<li>thing.torrent is the original torrent file created by your BitTorrent client</li>\n<li>output.torrent is the file you want to create</li>\n</ul>\n\nBesides creating the output file, which is a modified torrent file containing\nthe thing metadata, the program will also display a magnet link.\n\nTo seed your torrent, you need to put the file(s) that it comprises and\nthe generated torrent file in the directory configured for torrent seeding\n(usually the same as the one for downloads), and then add the torrent\nas an initial seed in your client. For the µTorrent client this found\nof the File menu, Add Torrent... or CTRL-O. where you can select the generated\ntorrent file. This is somewhat confusing because it requires the directory\nto save it - but apparently doesn't mind if this is the same directory.\n\nThen you can send the magnet link to your geeky friends who can paste it into their\nBitTorrent client and torrent your thing. For the µTorrent client, that latter\nstep is found on the File menu, Add Torrent from URL... or CTRL-U, where you can paste\nthe magnet link and begin the torrent process."
        }
    },
    "classes": {},
    "classitems": [],
    "warnings": []
}